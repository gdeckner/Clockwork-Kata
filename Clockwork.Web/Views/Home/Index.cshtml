
<script>
    function GetLocalTime() {
        var xhttp = new XMLHttpRequest();
        var selectTimeZoneList = document.getElementById("timeZoneSelect");
        var timeZoneSelected = selectTimeZoneList[selectTimeZoneList.selectedIndex].value;
        
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {

                let pulledTime = JSON.parse(this.responseText);
                document.getElementById("output").innerHTML = FormatTime(pulledTime.time);
                FormatTime(pulledTime);



            }
        };
        xhttp.open("GET", "http://localhost:57074/api/currenttime/?timeZoneId=" + timeZoneSelected, true);
        xhttp.setRequestHeader("Content-type", "application/json");
        xhttp.send();

    }
    function FormatTime(pulledTime) {
        var result = "";
        var time = new Date(pulledTime);
        var hours = time.getHours();
        var minutes = time.getMinutes();
        var seconds = time.getSeconds();
        var period = "AM";
        if (hours == 0) {
            hours = 12
        }
        else if (hours > 12) {
            hours = hours - 12;
            period = "PM";
        }


        hours = (hours < 10) ? "0" + hours : hours;
        minutes = (minutes < 10) ? "0" + minutes : minutes;
        seconds = (seconds < 10) ? "0" + seconds : seconds;

        var result = hours + ":" + minutes + ":" + seconds + " " + period;

        return result;

    }


    function GetAllTimes() {
        var xhttp = new XMLHttpRequest();

        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {

                var timeListResponses = JSON.parse(this.responseText);
                for (i = 0; i < timeListResponses.length - 1; i++) {
                    InsertDataToTable(
                        timeListResponses[i].currentTimeQueryId,
                        timeListResponses[i].clientIp,
                        timeListResponses[i].utcTime,
                        timeListResponses[i].time,
                        timeListResponses[i].timeZone)
                }

            }


        };
        xhttp.open("GET", "http://localhost:57074/api/currenttime/pullTimes/", true);
        xhttp.setRequestHeader("Content-type", "application/json");
        xhttp.send();


    }
    function InsertDataToTable(currentTimeQuery, clientIp, utctime, time, timeZone) {
        var table = document.getElementById("myTable");
        var row = table.insertRow(0);
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);
        var cell5 = row.insertCell(4);

        cell1.innerHTML = currentTimeQuery;
        cell2.innerHTML = clientIp;
        cell3.innerHTML = utctime;
        cell4.innerHTML = time;
        cell5.innerHTML = timeZone;

    }


</script>


<h2>AWH Clockwork Project @ViewData["Version"] on @ViewData["Runtime"]!</h2>


<button type="submit" onclick="GetLocalTime()">Get the time</button>
<button type="submit" onclick="GetAllTimes()">Get this timezone time!</button>

<div id="output" class="clock"></div>
<div id="test"></div>
<p id="massOutput"></p>

<div>
    <select id="timeZoneSelect">
        @foreach (TimeZoneInfo x in TimeZoneInfo.GetSystemTimeZones())
        {
            <option value="@x.Id">@x</option>
        }
    </select>
</div>
<table id="myTable">
    <tr>
        <th>Time Query Entry ID</th>
        <th>Time</th>
        <th>UTC Time</th>
        <th>Client Ip Address</th>
        <th>Selected Time Zone</th>
    </tr>
    <tr>
    </tr>
</table>